<?php

namespace Plateforme\CatalogueBundle\Repository;

/**
 * CategorieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategorieRepository extends \Doctrine\ORM\EntityRepository {
  
  /**
   * Fonction pour rechercher les catégories parents (= celles qui n'ont pas de parent)
   */
  public function findParents() {
    $qb = $this->createQueryBuilder('c')
        ->Select('c')
        ->Where('c.categorie is NULL');
    return $qb->getQuery()->getResult();
  }
  
  /**
   * Fonction pour rechercher catégories enfants d'une catégorie
   */
  public function findEnfants($id) {
    $qb = $this->createQueryBuilder('c')
        ->Select('c')
        ->Where('c.categorie = :parent_id')
        ->setParameter('parent_id', $id);
    return $qb->getQuery()->getResult();
  }
  
  /*
   * Recherche à partir du titre ou d'une combinaison de mot
   */
  public function findLikeTitre($query, $limit) {
    $termes = explode("+", $query); // Séparer les termes pour en faire autant de critère de recherche
    $fields = array('c.id', 'c.titre', 'c.slug');
    $qb = $this->createQueryBuilder('c');
    $qb->select($fields);
    $qb->where('1 = 1');
    $i = 0;
    foreach ($termes as $terme):
      $qb->andWhere(
          $qb->expr()->like('c.titre', ':term' . $i)
      );
      $qb->setParameter('term' . $i, '%' . $terme . '%');
      $i++;
    endforeach;
    if($limit){
      $qb->setMaxResults($limit);
    }
    return $qb->getQuery()->getResult();
  }

}
