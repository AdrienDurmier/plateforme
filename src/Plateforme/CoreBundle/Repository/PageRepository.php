<?php

namespace Plateforme\CoreBundle\Repository;

/**
 * PageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PageRepository extends \Doctrine\ORM\EntityRepository {

  /**
   * Renvoie la derniÃ¨re version d'une page
   */
  public function getAllPages() {
    $qb = $this->createQueryBuilder('p');
    // en cas d'erreur, executer dans phpmyadmin: SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
    $qb->orderBy('p.id', 'DESC');

    return $qb->getQuery()->getResult();
  }

  /**
   * Renvoie la version originale
   */
  public function getFirstVersion($groupe) {
    $qb = $this->createQueryBuilder('p');
    $qb->Where('p.groupe = :groupe');
    $qb->setParameter('groupe', $groupe);
    $qb->orderBy('p.id', 'ASC');
    $qb->setMaxResults(1);

    return $qb->getQuery()->getOneOrNullResult();
  }
  
  /**
   * Toutes les versions d'une page
   */
  public function getAllVersions($groupe) {
    $fields = array('p.id', 'pa.id as parent', 'p.titre', 'p.created', 'p.slug', 'u.username');
    $qb = $this->createQueryBuilder('p');
    $qb->select($fields);
    // en cas d'erreur, executer dans phpmyadmin: SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
    $qb->Where('p.groupe = :groupe');
    $qb->setParameter('groupe', $groupe);
    $qb->join('p.pageParent', 'pa');
    $qb->join('p.auteur', 'u');
    $qb->orderBy('p.id', 'ASC');

    return $qb->getQuery()->getResult();
  }

}
